@page "/orderedCourses"
@inject IOrderedCourseService OrderedCourseService

<h3>Ordered Courses Page</h3>

<div class="ordered-courses-container">
    @if (OrderedCourseService.OrderedCourses != null && OrderedCourseService.OrderedCourses.Any())
    {
        @foreach (var orderedCourse in OrderedCourseService.OrderedCourses)
        {
            <div class="ordered-course-card">
                <div class="card">
                    <img src="@orderedCourse.ImageUrl" class="card-img-top" alt="Course Image">
                    <div class="card-body">
                        <h5 class="card-title">@orderedCourse.Name</h5>
                        <p class="card-text">@orderedCourse.Category</p>
                        <p class="card-text">@orderedCourse.Location</p>
                        <p class="card-text">@orderedCourse.StartDate.ToString("yyyy-MM-dd")</p>
                        <p class="card-text">@orderedCourse.EndDate.ToString("yyyy-MM-dd")</p>
                        <p class="card-text">Price: $@orderedCourse.Price</p>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No ordered courses found.</p>
    }
</div>

<style>
    .ordered-courses-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }

    .ordered-course-card {
        flex: 0 0 calc(33.333% - 40px);
        max-width: calc(33.333% - 40px);
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .card {
        border: none;
    }

    .card-img-top {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 5px 5px 0 0;
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 5px;
    }

    h3 {
        text-align:center;
    }
</style>

@code {
    protected override async Task OnInitializedAsync()
    {
        await OrderedCourseService.GetAllOrderedCourses();
    }
}
