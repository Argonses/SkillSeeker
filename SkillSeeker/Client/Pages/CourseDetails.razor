@page "/course/{id:int}"
@inject HttpClient http
@inject ICourseService CourseService

<link href="/css/CourseStyles.css" rel="stylesheet" />

<h3 style="text-align:center">CourseDetails</h3>

@if (course != null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <img src="@course.ImageUrl" alt="Course Image" class="img-fluid rounded-top course-image" />
                    <div class="card-body">
                        <h4 class="card-title">@course.Name</h4>
                        <p class="details-location">@course.Location</p>
                        <p class="details-category">@course.Category</p>
                        <p class="details-description">@course.Description</p>
                        <p class="details-instructor"><strong>Instructor:</strong> @course.Instructor</p>
                        <p class="details-price"><strong>Price:</strong> $@course.Price</p>
                        <p class="details-dates"><strong>Dates:</strong> @course.StartDate.ToString("dd.MM.yyyy") - @course.EndDate.ToString("dd.MM.yyyy")</p>
                        <p class="details-capacity"><strong>Capacity:</strong> @course.Capacity</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <h4 class="mt-4">Registration Form</h4>
                <form>
                    <div class="form-group">
                        <label for="firstName">First Name:</label>
                        <input type="text" class="form-control" id="firstName" placeholder="Enter your first name" @bind="firstName" required />
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name:</label>
                        <input type="text" class="form-control" id="lastName" placeholder="Enter your last name" @bind="lastName" required />
                    </div>
                    <div class="form-group">
                        <label for="address">Address:</label>
                        <input type="text" class="form-control" id="address" placeholder="Enter your address" @bind="address" required />
                    </div>
                    <div class="form-group">
                        <label for="birthdate">Date of Birth:</label>
                        <input type="date" class="form-control" id="birthdate" @bind="birthdate" max="@DateTime.Today.ToString("yyyy-MM-dd")" required />
                    </div>
                    <button type="submit" class="btn btn-primary" @onclick="JoinToCourse" disabled="@(!IsFormValid())">Submit</button>
                </form>
            </div>
            @if (isItemAddedToCart)
            {
                <div class="alert alert-success success-message">
                    <strong>Success!</strong> Joined to the course!
                </div>
            }
        </div>
    </div>
}
else
{
    <p>No course found.</p>
}

@code {
    private Course course = null;
    OrderedCourse order = new OrderedCourse();
    private bool isItemAddedToCart = false;

    private string firstName = string.Empty;
    private string lastName = string.Empty;
    private string address = string.Empty;
    private DateTime birthdate = DateTime.Now;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        course = await CourseService.GetCourseById(Id);
    }

    private async Task JoinToCourse()
    {
        if (!IsFormValid())
        {
            return;
        }

        order.Name = course.Name;
        order.ImageUrl = course.ImageUrl;
        order.Category = course.Category;
        order.Location = course.Location;
        order.StartDate = course.StartDate;
        order.EndDate = course.EndDate;
        order.Price = course.Price;

        await http.PostAsJsonAsync("api/OrderedCourses", order);

        isItemAddedToCart = true;
    }

    private bool IsFormValid()
    {
        return !string.IsNullOrWhiteSpace(firstName)
            && !string.IsNullOrWhiteSpace(lastName)
            && !string.IsNullOrWhiteSpace(address)
            && birthdate != default;
    }
}

